name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        java: [ '21.0.2' ]
      fail-fast: false
    name: ${{ matrix.os }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'oracle'
      - name: Verify Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: Get build version LINUX
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: echo "BUILD_VERSION=$(awk "/^(version)/{print}" build.gradle | sed -re "s/[(version )']//g")" >> "$GITHUB_ENV"
      - name: Get build version MACOS
        if: ${{ matrix.os == 'macOS-latest' }}
        run: echo "BUILD_VERSION=$(sed -n '/^version/p' build.gradle | sed -E "s/[(version )']//g")" >> "$GITHUB_ENV"
      - name: Get build version WINDOWS
        if: ${{ matrix.os == 'windows-latest' }}
        run: echo "BUILD_VERSION=$(((Select-String -Pattern '^version' build.gradle | Select-Object -First 1).Line -replace "version |'").Trim())" >> $env:GITHUB_ENV
      - name: Execute build
        run: ./gradlew --info --stacktrace build
      - name: Build Artifact
        run: ./gradlew --info --stacktrace jpackage
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: FinanceTracker-${{ env.BUILD_VERSION }}-${{ matrix.os }}
          path: build/jpackage/FinanceTracker*